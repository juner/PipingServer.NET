//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace PipingServer.Core.Properties {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("PipingServer.Core.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Cannot seek in {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string CannotSeekIn {
            get {
                return ResourceManager.GetString("CannotSeekIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Connection on &apos;{0}&apos; has been established already. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ConnectionOnKeyHasBeenEstablishedAlready {
            get {
                return ResourceManager.GetString("ConnectionOnKeyHasBeenEstablishedAlready", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Connection receivers over. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ConnectionReceiversOver {
            get {
                return ResourceManager.GetString("ConnectionReceiversOver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Connection sender over. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ConnectionSenderOver {
            get {
                return ResourceManager.GetString("ConnectionSenderOver", resourceCulture);
            }
        }
        
        /// <summary>
        ///   [INFO] {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string InfoPrefix {
            get {
                return ResourceManager.GetString("InfoPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} is already set. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string IsAlreadySet {
            get {
                return ResourceManager.GetString("IsAlreadySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} is not complete. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string IsNotComplete {
            get {
                return ResourceManager.GetString("IsNotComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Missing content-type boundary. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MissingContentTypeBoundary {
            get {
                return ResourceManager.GetString("MissingContentTypeBoundary", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Multipart boundary length limit {0} exceeded. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string MultipartBoundaryLengthLimitExceeded {
            get {
                return ResourceManager.GetString("MultipartBoundaryLengthLimitExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} is {1}. required {0} is {2} over. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string NameIsValue1RequiredNameIsValue2Over {
            get {
                return ResourceManager.GetString("NameIsValue1RequiredNameIsValue2Over", resourceCulture);
            }
        }
        
        /// <summary>
        ///   No Data Stream. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string NoDataStream {
            get {
                return ResourceManager.GetString("NoDataStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Not Readable Stream. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string NotReadableStream {
            get {
                return ResourceManager.GetString("NotReadableStream", resourceCulture);
            }
        }
        
        /// <summary>
        ///   CREATE {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string PipingStore_Create {
            get {
                return ResourceManager.GetString("PipingStore_Create", resourceCulture);
            }
        }
        
        /// <summary>
        ///   GET {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string PipingStore_Get {
            get {
                return ResourceManager.GetString("PipingStore_Get", resourceCulture);
            }
        }
        
        /// <summary>
        ///   REMOVE FAILD {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string PipingStore_Remove_Faild {
            get {
                return ResourceManager.GetString("PipingStore_Remove_Faild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   REMOVE SUCCESS {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string PipingStore_Remove_Success {
            get {
                return ResourceManager.GetString("PipingStore_Remove_Success", resourceCulture);
            }
        }
        
        /// <summary>
        ///   {0} receiver(s) has/have been connected. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string ReceiversCountReceiversHaveBeenConnected {
            get {
                return ResourceManager.GetString("ReceiversCountReceiversHaveBeenConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   text/plain; charset={0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string SenderResponseMessageMimeType {
            get {
                return ResourceManager.GetString("SenderResponseMessageMimeType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sending successful! {0} bytes. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string SendingSuccessfulBytes {
            get {
                return ResourceManager.GetString("SendingSuccessfulBytes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Start sending with {0} receiver(s)! に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string StartSendingWithReceiversCountReceivers {
            get {
                return ResourceManager.GetString("StartSendingWithReceiversCountReceivers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   USE {0}. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string StreamConverterExtensions_GetDataAsync_UseType {
            get {
                return ResourceManager.GetString("StreamConverterExtensions_GetDataAsync_UseType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   STREAM REMOVED FAILD {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string StreamRemoveFaild {
            get {
                return ResourceManager.GetString("StreamRemoveFaild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   STREAM REMOVE SUCCESS. {0} に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string StreamRemoveSuccess {
            get {
                return ResourceManager.GetString("StreamRemoveSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The number of receivers should be {0} but {1}. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string TheNumberOfReceiversShouldBeRequestedReceiversCountButReceiversCount {
            get {
                return ResourceManager.GetString("TheNumberOfReceiversShouldBeRequestedReceiversCountButReceiversCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The number of receivers should be {0} but {1}. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string TheNumberOfReceiversShouldBeRequestedReceiversCountButReceiversCount_ {
            get {
                return ResourceManager.GetString("TheNumberOfReceiversShouldBeRequestedReceiversCountButReceiversCount.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Waiting for {0} receiver(s)... に類似しているローカライズされた文字列を検索します。
        /// </summary>
        internal static string WaitingForRequestedReceiversCountReceivers {
            get {
                return ResourceManager.GetString("WaitingForRequestedReceiversCountReceivers", resourceCulture);
            }
        }
    }
}
